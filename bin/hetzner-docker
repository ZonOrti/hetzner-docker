#!/usr/bin/env ruby


require "slop"
require "hetzner-docker"
DEFAULT_IDENTITY_FILE = '~/.ssh/id_rsa.pub'
opts = Slop.parse(help: true) do
  description 'Usage: manage.rb [command] [options]'
  on 'v','version', 'module version' do
    puts HetznerDocker::VERSION
  end

  command 'rescue' do
    description 'Enter Rescue mode'
    on :i, :ip=, 'Server ip'
    run do |opts, args|
      host = HetznerHost.new(opts.to_hash)
      host.rescuemode
    end

  end

  command 'ubuntu' do
    description 'Install Ubuntu 14.04 on server'
    on :i, :ip=, 'Server ip'
    on :H, :hostname=, 'Desired server hostname', argument: :optional
    on :d, :domain=, 'Desired server domain', argument: :optional
    on :u, :url=, 'ubuntu bootstrap script', argument: :optional

    run do |opts, args|
      host = HetznerHost.new(opts.to_hash)
      host.rescuemode
      host.install_ubuntu
    end
  end

  command 'chef' do
    on :i, :ip=, 'Server ip'
    on :bootstrap_version=, 'Chef version to install', argument: :optional
    description 'Install Chef'
    run do |opts, args|
      host = HetznerHost.new(opts.to_hash)
      host.bootstrap_chef
    end
  end

  command 'cook' do
    description 'Cook recipes'
    on :i, :ip=, 'Server ip'
    on :b, :cookbook= , 'Cook this recipe only', argument: :optional, default: "docker"
    run do |opts, args|
      host = HetznerHost.new(opts.to_hash)
      host.run_chef
    end
  end

  command 'bootstrap' do
    description 'Do everything'
    on :i, :ip=, 'Server ip'
    on :H, :hostname=, 'Desired server hostname', argument: :optional
    on :d, :domain=, 'Desired server domain', argument: :optional
    on :b, :cookbook= , 'Cook this recipe only', argument: :optional, default: "docker"
    on :bootstrap_version=, 'Chef version to install'
    run do |opts, args|
      host = HetznerHost.new(opts.to_hash)
      host.rescuemode
      host.install_ubuntu
      host.bootstrap_chef
      host.run_chef
    end
  end
end

if ARGV.empty?
   puts opts.help
end 